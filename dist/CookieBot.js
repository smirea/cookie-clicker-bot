/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/Automator.ts":
/*!**************************!*\
  !*** ./src/Automator.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\nconst utils = (0, tslib_1.__importStar)(__webpack_require__(/*! ./utils */ \"./src/utils.ts\"));\nconst options_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! ./options */ \"./src/options.ts\"));\nconst BuyTimer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! ./timers/BuyTimer */ \"./src/timers/BuyTimer/index.ts\"));\nconst ClickCookieTimer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! ./timers/ClickCookieTimer */ \"./src/timers/ClickCookieTimer.ts\"));\nconst ClickNewsTimer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! ./timers/ClickNewsTimer */ \"./src/timers/ClickNewsTimer.ts\"));\nconst DragonAuraTimer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! ./timers/DragonAuraTimer */ \"./src/timers/DragonAuraTimer.ts\"));\nconst GardenMinigameTimer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! ./timers/GardenMinigameTimer */ \"./src/timers/GardenMinigameTimer.ts\"));\nconst GrimoireMinigameTimer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! ./timers/GrimoireMinigameTimer */ \"./src/timers/GrimoireMinigameTimer.ts\"));\nconst LogTimer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! ./timers/LogTimer */ \"./src/timers/LogTimer.ts\"));\nconst PageReloadTimer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! ./timers/PageReloadTimer */ \"./src/timers/PageReloadTimer.ts\"));\nconst PantheonMinigameTimer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! ./timers/PantheonMinigameTimer */ \"./src/timers/PantheonMinigameTimer.ts\"));\nconst SeasonTimer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! ./timers/SeasonTimer */ \"./src/timers/SeasonTimer.ts\"));\nconst ShimmerTimer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! ./timers/ShimmerTimer */ \"./src/timers/ShimmerTimer.ts\"));\nconst SugarLumpTimer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! ./timers/SugarLumpTimer */ \"./src/timers/SugarLumpTimer.ts\"));\nconst WrinklerTimer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! ./timers/WrinklerTimer */ \"./src/timers/WrinklerTimer.ts\"));\nconst STATES = ['off', 'on', 'click'];\nclass Automator {\n    constructor() {\n        this.upgradeFatigue = 1; // prevent buying too many updates one after another\n        this.cpsCache = {};\n        this.lastState = {};\n        this.timers = {\n            BuyTimer: new BuyTimer_1.default(this),\n            ClickCookieTimer: new ClickCookieTimer_1.default(this),\n            ClickNewsTimer: new ClickNewsTimer_1.default(this),\n            DragonAuraTimer: new DragonAuraTimer_1.default(this),\n            GardenMinigameTimer: new GardenMinigameTimer_1.default(this),\n            GrimoireMinigameTimer: new GrimoireMinigameTimer_1.default(this),\n            LogTimer: new LogTimer_1.default(this),\n            PageReloadTimer: new PageReloadTimer_1.default(this),\n            PantheonMinigameTimer: new PantheonMinigameTimer_1.default(this),\n            SeasonTimer: new SeasonTimer_1.default(this),\n            ShimmerTimer: new ShimmerTimer_1.default(this),\n            SugarLumpTimer: new SugarLumpTimer_1.default(this),\n            WrinklerTimer: new WrinklerTimer_1.default(this),\n        };\n        this.state = 'off';\n        this.tickCounter = 0;\n        /** @deprecated keep for debug only in the console */\n        this.utils = utils;\n        let existingLog = [];\n        try {\n            existingLog = JSON.parse(localStorage[options_1.default.localStorage.log]);\n        }\n        catch (ex) { }\n        this.logMessages = utils_1.global.__automateLog = utils_1.global.__automateLog || existingLog;\n        (0, utils_1.$$)('.CookieAutomator').forEach(el => el.remove());\n        this.domNode = document.createElement('div');\n        document.body.appendChild(this.domNode);\n        this.domNode.classList.add('CookieAutomator');\n        this.domNode.setAttribute('style', 'position:fixed;z-index:999999999999;top:35px;left:5px;cursor:pointer;display:flex;align-items:center;color:white;cursor:pointer;background:rgba(0,0,0,0.95);padding:5px;');\n        this.domNode.innerHTML = `\n            <span>Automator: </span>\n            <span style='margin-left:5px'></span>\n            <span class='icon' style='width:10px;height:10px;border-radius:50%;margin-left:5px;'></span>\n        `;\n        this.domNode.addEventListener('click', () => {\n            this.switchState();\n        });\n        this.updateDom();\n    }\n    start() { this.switchState('on'); }\n    stop() { this.switchState('off'); }\n    reset() {\n        this.stop();\n        for (const key in options_1.default.localStorage)\n            delete localStorage[key];\n        location.reload();\n    }\n    switchState(next) {\n        if (!next) {\n            const index = STATES.findIndex(x => x === this.state);\n            next = STATES[(index + 1) % STATES.length];\n        }\n        if (next === this.state)\n            return;\n        this.state = next;\n        this.applyState(this.state);\n        this.updateDom();\n    }\n    applyState(state) {\n        this.startDate = this.startDate || Date.now();\n        this.tickCounter = this.tickCounter || 0;\n        // console.clear();\n        // console.table(\n        //     Object.values(this.timers).map(timer => ({\n        //         name: timer.constructor.name,\n        //         ticks: timer.defaultTimeout,\n        //         timeSeconds: timer.defaultTimeoutMs / 1000,\n        //     }))\n        // );\n        switch (state) {\n            case 'off':\n                this.startDate = 0;\n                this.tickCounter = 0;\n                clearTimeout(this.timeout);\n                for (const timer of Object.values(this.timers))\n                    timer.stop();\n                break;\n            case 'click':\n                this.applyState('off');\n                for (const timer of Object.values(this.timers)) {\n                    if (timer.type === 'clicker')\n                        timer.start();\n                }\n                this.tick();\n                break;\n            case 'on':\n                this.applyState('off');\n                for (const timer of Object.values(this.timers))\n                    timer.start();\n                this.tick();\n                break;\n        }\n    }\n    tick() {\n        clearTimeout(this.timeout);\n        for (const timer of Object.values(this.timers)) {\n            if (this.tickCounter % timer.timeout !== 0)\n                continue;\n            if (timer.startDelay() && this.tickCounter === 0)\n                continue;\n            timer.sideEffects(); // always runs even when the timer is stopped\n            if (timer.isStopped)\n                continue;\n            timer.run();\n        }\n        ++this.tickCounter;\n        setTimeout(() => this.tick(), options_1.default.tickMs);\n    }\n    updateDom() {\n        const [, text, icon] = this.domNode.children;\n        text.innerHTML = this.state;\n        switch (this.state) {\n            case 'off':\n                icon.style.background = 'red';\n                break;\n            case 'click':\n                icon.style.background = 'orange';\n                break;\n            case 'on':\n                icon.style.background = 'lightgreen';\n                break;\n        }\n    }\n    get realCps() {\n        const clickTimer = this.timers.ClickCookieTimer;\n        if (!clickTimer || clickTimer.isStopped)\n            return utils_1.Game.cookiesPs;\n        return Math.round(utils_1.Game.cookiesPs +\n            // 0.95 since timers are not reaaaly exact\n            0.95 * utils_1.Game.computedMouseCps * 1000 / clickTimer.defaultTimeoutMs);\n    }\n    log(msg, { eta, extra, color } = {}) {\n        msg = (0, utils_1.cleanHTML)(msg);\n        let last = this.logMessages[this.logMessages.length - 1];\n        if (last && last.msg === msg) {\n            ++last.count;\n            last.extra = extra;\n            last.eta = eta;\n        }\n        else {\n            if (last) {\n                if (last.eta && last.eta < 30e3)\n                    delete last.eta;\n                delete last.extra;\n            }\n            this.logMessages.push({\n                id: ((last === null || last === void 0 ? void 0 : last.id) || 0) + 1,\n                time: Date.now(), msg,\n                count: 1,\n                eta,\n                extra,\n                color,\n            });\n        }\n        if (this.logMessages.length > 1000) {\n            this.logMessages.splice(0, this.logMessages.length - 1000);\n        }\n        // console.log(msg);\n    }\n    getBuffs() {\n        let cpsMultiple = 1;\n        let multClick = 1;\n        let negativeBuffs = 0;\n        let positiveBuffs = 0;\n        for (const buff of Object.values(utils_1.Game.buffs)) {\n            if (!buff.visible)\n                continue;\n            if (buff.multCpS) {\n                cpsMultiple *= buff.multCpS;\n                if (buff.multCpS < 1)\n                    ++negativeBuffs;\n                else\n                    ++positiveBuffs;\n            }\n            if (buff.multClick) {\n                multClick *= buff.multClick;\n            }\n        }\n        return {\n            cpsMultiple,\n            negativeBuffs,\n            positiveBuffs,\n            multClick,\n            buffs: Object.keys(utils_1.Game.buffs),\n        };\n    }\n    getAvailableUpgrades() {\n        return utils_1.Game.UpgradesInStore.filter(x => !options_1.default.bannedUpgrades[x.name] &&\n            !x.bought &&\n            x.unlocked &&\n            x.pool !== 'toggle' &&\n            x.pool !== 'debug');\n    }\n    getActiveWrinklers() {\n        return utils_1.Game.wrinklers.filter(x => x.hp > 0);\n    }\n    getAvailableDragonAuras() {\n        const auras = [];\n        for (const i in utils_1.Game.dragonAuras) {\n            const aura = utils_1.Game.dragonAuras[i];\n            const index = parseInt(i);\n            if (utils_1.Game.dragonLevel >= index + 4) {\n                auras.push({ ...aura, index, level: index + 4 });\n            }\n        }\n        auras.sort((a, b) => a.index - b.index);\n        return {\n            byIndex: auras,\n            byName: Object.fromEntries(auras.map(x => [x.name, x])),\n        };\n    }\n    buy(obj, amount = 1) {\n        if (typeof amount === 'number' && amount < 1) {\n            console.warn('[Automator.buy()] Cannot get <1 amount: %s of %s', amount, obj.name);\n            return;\n        }\n        if (this.upgradeFatigue) {\n            if (obj.type === 'upgrade') {\n                const increment = Math.min(2, 0.5 + Math.floor(utils_1.Game.cookiesPs / 100) / 10);\n                this.upgradeFatigue = Math.min(this.upgradeFatigue + increment, 10);\n            }\n            else {\n                this.upgradeFatigue = Math.max(this.upgradeFatigue - 0.2 * amount, 1);\n            }\n        }\n        return obj.buy(amount);\n    }\n    getCps(name) {\n        var _a;\n        this.cpsCache = this.cpsCache || {};\n        if (this.cpsCache[name])\n            return this.cpsCache[name];\n        const obj = utils_1.Game.Objects[name];\n        const tooltip = obj.tooltip();\n        const match = utils_1.units.strReplace(tooltip).match(/produces <b>([^\\s]+) cookies/) || [];\n        let cps = parseFloat(match[1] || '');\n        // @TODO: figure out a better way instead of obj.baseCps, it's way too low\n        if (Number.isNaN(cps))\n            return obj.bought ? obj.baseCps : 0;\n        if (obj.name === 'Grandma') {\n            for (const x of utils_1.Game.ObjectsById) {\n                if (x.name === 'Grandma')\n                    continue;\n                if (!((_a = x.grandma) === null || _a === void 0 ? void 0 : _a.bought))\n                    continue;\n                const match = x.grandma.desc.match(/gain <b>\\+(\\d+).*<\\/b> per (\\d+)? grandma/i) || [];\n                const pct = parseFloat(match[1]);\n                const multiplier = parseInt(match[2] || '1', 10);\n                if (!pct || !multiplier || Number.isNaN(pct) || Number.isNaN(multiplier))\n                    continue;\n                const childCps = x.cps(x);\n                cps = cps + childCps * (pct / 100) * Math.floor(utils_1.Game.Objects.Grandma.amount / multiplier);\n            }\n        }\n        this.cpsCache[name] = cps;\n        return cps;\n    }\n}\nexports[\"default\"] = Automator;\n\n\n//# sourceURL=webpack://@smirea/cookie-clicker-bot/./src/Automator.ts?");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst options_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! ./options */ \"./src/options.ts\"));\nsetTimeout(() => {\n    var _a;\n    // importing inline so the Game object has time be defined\n    const Automator = (__webpack_require__(/*! ./Automator */ \"./src/Automator.ts\")[\"default\"]);\n    const { global, Game } = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\n    Game.volume = 0; // prevent DOM error\n    (_a = global.Automator) === null || _a === void 0 ? void 0 : _a.stop(); // stop previous instance if any\n    const instance = new Automator;\n    instance.switchState(options_1.default.startupState);\n    global.Automator = instance; // save to window for debugging\n}, 500);\n'🍪🚜';\n\n\n//# sourceURL=webpack://@smirea/cookie-clicker-bot/./src/index.ts?");

/***/ }),

/***/ "./src/options.ts":
/*!************************!*\
  !*** ./src/options.ts ***!
  \************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.msToTicks = void 0;\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./src/utils.ts\");\nconst getLSKey = (name) => `CookieAutomator_${name}_${utils_1.Game.version}_${utils_1.Game.beta}`;\nconst options = {\n    startupState: 'on',\n    tickMs: 5,\n    showLogs: 25,\n    buildingWait: 0.35,\n    upgradeWait: 0.35,\n    autoReloadMinutes: 0,\n    achievementThresholds: {\n        Default: [1, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 550, 600],\n        Cursor: [1, 2, 50, 100, 200, 300, 400, 500, 600, 700, 800, 900],\n    },\n    bannedUpgrades: {\n        'Elder Covenant': true,\n        'Elder Pledge': true, // peace was never an option\n    },\n    dragon: {\n        waitRatios: {\n            cookie: 0.4,\n            building: 0.6,\n            all: 0.75,\n        },\n        auras: [\n            'Radiant Appetite',\n            'Dragonflight',\n            'Breath of Milk',\n        ],\n    },\n    localStorage: {\n        log: getLSKey('log'),\n    },\n    pantheon: {\n        layout: ['ruin', 'labor', 'scorn'],\n        sellForRuin: ['Mine', 'Factory', 'Bank', 'Temple', 'Shipment'],\n    },\n    garden: {\n        strategies: [\n            // {\n            //     name: 'Focus on new seeds',\n            //     conditions: { minSeeds: 0 },\n            //     usedPlotsRatio: 0.5,\n            //     harvestDecayTicks: 10,\n            //     maxCpsBuff: 1,\n            //     soil: 'fertilizer',\n            //     defaultOdds: { default: 1, weed: 0.5 },\n            //     plantOdds: {\n            //         bakerWheat: 1,\n            //         thumbcorn: 2,\n            //         cronerice: 0.25,\n            //         gildmillet: 1.25,\n            //         chocoroot: 1.5,\n            //     },\n            // },\n            {\n                name: 'Optimal mutations',\n                conditions: { minSeeds: 0 },\n                optimalMutationStrategy: true,\n                maxCpsBuff: 10,\n                soil: 'woodchips',\n                defaultOdds: { default: 1, weed: 0.5 },\n            },\n            {\n                name: 'Focus on CPS',\n                conditions: { minSeeds: 20 },\n                usedPlotsRatio: 1,\n                harvestDecayTicks: 1,\n                maxCpsBuff: 1.5,\n                soil: 'clay',\n                defaultOdds: { default: 0.5, weed: 0.125 },\n                plantOdds: {\n                    bakerWheat: 1,\n                    thumbcorn: 3,\n                    cronerice: 0.125,\n                    gildmillet: 1.25,\n                    chocoroot: 1.5,\n                },\n            },\n        ],\n    },\n    season: {\n        default: 'christmas',\n        exclude: ['fools'],\n    },\n};\nconst msToTicks = (ms) => Math.max(1, Math.floor(ms / options.tickMs));\nexports.msToTicks = msToTicks;\nexports[\"default\"] = options;\n\n\n//# sourceURL=webpack://@smirea/cookie-clicker-bot/./src/options.ts?");

/***/ }),

/***/ "./src/timers/BuyTimer/BuildingBuyer.ts":
/*!**********************************************!*\
  !*** ./src/timers/BuyTimer/BuildingBuyer.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst options_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! src/options */ \"./src/options.ts\"));\nconst utils_1 = __webpack_require__(/*! src/utils */ \"./src/utils.ts\");\nconst Buyer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! ./Buyer */ \"./src/timers/BuyTimer/Buyer.ts\"));\nclass BuildingBuyer extends Buyer_1.default {\n    scale(x) { return x ** 1.5; }\n    getOrders() {\n        const sorted = this.getSortedBuildings();\n        const active = utils_1.Game.ObjectsById.filter(x => !x.bought || !x.amount);\n        const next = sorted[0];\n        const nextWait = active.find(x => utils_1.Game.cookies >= x.price * options_1.default.buildingWait);\n        const nextNew = active.find(x => x.price <= utils_1.Game.cookies);\n        let nextHighValue = sorted.find(item => !item.locked && item.amount == 0 && item.price <= utils_1.Game.cookies);\n        nextHighValue || (nextHighValue = sorted.slice(1, 7).find((item, index) => {\n            return sorted[0].price <= utils_1.Game.cookies &&\n                item.relativeValue - sorted[0].relativeValue >= 10 + (2.5 ** (index + 2));\n        }) && sorted[0]);\n        const result = [\n            ...this.getThresholdOrders(sorted),\n        ];\n        if (nextNew) {\n            result.push({\n                type: 'buy',\n                ratio: (utils_1.Game.cookies ** 6) / nextNew.price,\n                cookies: nextNew.price,\n                buy: () => this.context.buy(nextNew),\n                log: () => ({\n                    msg: `🏛 Bought new building type: ${nextNew.name}`\n                }),\n            });\n        }\n        if (nextHighValue) {\n            const amount = (0, utils_1.getAffordableBuildingMultiple)(nextHighValue, [50, 40, 30, 20, 10, 1]) || 1;\n            const price = nextHighValue.price * amount;\n            result.push({\n                type: 'buy',\n                ratio: (utils_1.Game.cookies ** 5) / price,\n                cookies: price,\n                buy: () => this.context.buy(nextHighValue.building, amount),\n                log: () => ({\n                    msg: `💰 So cheap it just can't wait: Bought ${nextHighValue.name} ✕ ${amount}`\n                }),\n            });\n        }\n        if (nextWait) {\n            result.push({\n                type: 'wait',\n                ratio: (utils_1.Game.cookies ** 3) / nextWait.price,\n                cookies: nextWait.price,\n                log: () => ({\n                    msg: `🟡 Waiting to buy new building type: ${nextWait.name}`,\n                    eta: this.getEta(nextWait.price),\n                }),\n            });\n        }\n        if (next) {\n            if (next.price <= utils_1.Game.cookies) {\n                result.push({\n                    type: 'buy',\n                    ratio: utils_1.Game.cookies / next.price,\n                    cookies: next.price,\n                    buy: () => this.context.buy(next.building),\n                    log: () => ({\n                        msg: `🏛 Bought building: ${next.name}`\n                    }),\n                });\n            }\n            else if (!result.length) {\n                result.push({\n                    type: 'wait',\n                    ratio: utils_1.Game.cookies / next.price,\n                    cookies: next.price,\n                    log: () => ({\n                        msg: `⏲ Waiting to buy building: ${next.name}`,\n                        eta: this.getEta(next.price),\n                    }),\n                });\n            }\n        }\n        return result;\n    }\n    getThresholdOrders(sorted) {\n        if (utils_1.Game.cookiesPs < 1e3)\n            return [];\n        const active = [];\n        for (const obj of sorted) {\n            if (!obj.bought || obj.amount <= 1)\n                continue;\n            const ranges = options_1.default.achievementThresholds[obj.name] || options_1.default.achievementThresholds.Default;\n            if (obj.amount >= ranges[ranges.length - 1])\n                continue;\n            const index = ranges.findIndex((start, i) => start <= obj.amount && obj.amount < ranges[i + 1]);\n            const amount = ranges[index + 1];\n            const price = (0, utils_1.getCostOfNBuildings)(obj, amount) || 1;\n            const toBuy = amount - obj.amount;\n            active.push({\n                obj,\n                toBuy,\n                amount,\n                price,\n            });\n        }\n        active.sort((a, b) => a.price - b.price);\n        const next = active[0];\n        if (!next)\n            return [];\n        const base = {\n            ratio: utils_1.Game.cookies / next.price,\n            cookies: next.price,\n        };\n        if (next.price <= utils_1.Game.cookies) {\n            return [\n                {\n                    type: 'buy',\n                    ...base,\n                    buy: () => this.context.buy(next.obj.building, next.toBuy),\n                    log: () => ({\n                        msg: `🚀 To the moon: Bought from ${next.obj.amount} → ${next.amount} of ${next.obj.name}`,\n                    }),\n                }\n            ];\n        }\n        if (next.price * 0.8 <= utils_1.Game.cookies) {\n            return [\n                {\n                    type: 'wait',\n                    ...base,\n                    log: () => ({\n                        msg: `🟡 Waiting to buy to threshold for ${next.obj.name} - ${(0, utils_1.formatAmount)(next.price)}`,\n                        eta: this.getEta(next.price),\n                    }),\n                }\n            ];\n        }\n        return [];\n    }\n    getBuildingPrice(building) {\n        if (utils_1.Game.cookiesPs > 1e9) {\n            //  buildings that are primarily used for sacrifice are much less appealling\n            if (options_1.default.pantheon.sellForRuin.includes(building.name)) {\n                return building.price * 1e6;\n            }\n        }\n        return building.price;\n    }\n    getSortedBuildings() {\n        var _a;\n        const sorted = utils_1.Game.ObjectsById\n            .filter(x => !x.locked)\n            .map(obj => {\n            const price = this.getBuildingPrice(obj);\n            return {\n                name: obj.name,\n                price,\n                bought: obj.bought,\n                locked: obj.locked,\n                amount: obj.amount,\n                basePrice: obj.basePrice * (price / obj.price),\n                cps: this.context.getCps(obj.name),\n                pricePerCps: Math.max(0.01, Math.round(price / this.context.getCps(obj.name))),\n                relativeValue: 0,\n                building: utils_1.Game.Objects[obj.name],\n            };\n        })\n            .filter(obj => obj.cps)\n            .sort((a, b) => a.pricePerCps - b.pricePerCps);\n        const min = ((_a = sorted[0]) === null || _a === void 0 ? void 0 : _a.pricePerCps) || 1;\n        for (const obj of sorted) {\n            obj.relativeValue = Math.round(obj.pricePerCps / min * 10) / 10;\n        }\n        return sorted;\n    }\n}\nexports[\"default\"] = BuildingBuyer;\n\n\n//# sourceURL=webpack://@smirea/cookie-clicker-bot/./src/timers/BuyTimer/BuildingBuyer.ts?");

/***/ }),

/***/ "./src/timers/BuyTimer/Buyer.ts":
/*!**************************************!*\
  !*** ./src/timers/BuyTimer/Buyer.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.scales = void 0;\nconst utils_1 = __webpack_require__(/*! src/utils */ \"./src/utils.ts\");\n/**\n *\n */\nclass Buyer {\n    constructor(context) {\n        this.context = context;\n    }\n    execute() {\n        const result = this.getOrders();\n        if (!result)\n            return [];\n        const list = [];\n        for (const { ratio, ...item } of Array.isArray(result) ? result : [result]) {\n            const score = Math.round(1e3 * Math.log10(this.scale(ratio)));\n            list.push({ ...item, score });\n        }\n        return list;\n    }\n    getEta(targetCookies) {\n        if (targetCookies <= utils_1.Game.cookies)\n            return undefined;\n        return (targetCookies - utils_1.Game.cookies) / this.context.realCps;\n    }\n}\nexports[\"default\"] = Buyer;\nexports.scales = {\n    x2: (x) => x ** 2,\n};\n\n\n//# sourceURL=webpack://@smirea/cookie-clicker-bot/./src/timers/BuyTimer/Buyer.ts?");

/***/ }),

/***/ "./src/timers/BuyTimer/DragonBuyer.ts":
/*!********************************************!*\
  !*** ./src/timers/BuyTimer/DragonBuyer.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst options_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! src/options */ \"./src/options.ts\"));\nconst utils_1 = __webpack_require__(/*! src/utils */ \"./src/utils.ts\");\nconst Buyer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! ./Buyer */ \"./src/timers/BuyTimer/Buyer.ts\"));\nclass DragonBuyer extends Buyer_1.default {\n    constructor(context) {\n        super(context);\n        this.buyToAmount = (building, amount) => {\n            if (building.amount >= amount)\n                return;\n            const toBuy = amount - building.amount;\n            this.context.buy(building, toBuy);\n            this.context.log(`🐲 Bought ${toBuy} ✕ ${building.name} to feed to the dragon`);\n        };\n        this.handlers = {\n            'million cookies': amount => ({\n                type: 'cookie',\n                amount: amount * 1e6,\n                cookies: amount * 1e6,\n                buy: () => { },\n            }),\n            'of every building': amount => ({\n                type: 'all',\n                amount,\n                cookies: utils_1.Game.ObjectsById.find(x => x.locked)\n                    ? Infinity // unlock all buildings first\n                    : utils_1.Game.ObjectsById\n                        .map(obj => (0, utils_1.getCostOfNBuildings)(obj, amount))\n                        .reduce((s, x) => s + x, 0) ||\n                        utils_1.Game.ObjectsById\n                            .map(obj => (0, utils_1.getCostOfNBuildings)(obj, amount, amount * .9))\n                            .reduce((s, x) => s + x, 0),\n                buy: () => {\n                    for (const building of Array.from(utils_1.Game.ObjectsById).reverse()) {\n                        this.buyToAmount(building, amount);\n                    }\n                },\n            }),\n        };\n        for (const building of utils_1.Game.ObjectsById) {\n            this.handlers[building.plural] = amount => ({\n                type: 'building',\n                value: building.name,\n                amount,\n                cookies: (0, utils_1.getCostOfNBuildings)(building, amount) || (0, utils_1.getCostOfNBuildings)(building, amount, amount * .5),\n                buy: () => this.buyToAmount(building, amount),\n            });\n        }\n    }\n    scale(x) { return x ** 3; }\n    getOrders() {\n        if (!utils_1.Game.Upgrades['A crumbly egg'].bought)\n            return null;\n        if (utils_1.Game.cookiesPs < 1e5 || utils_1.Game.dragonLevel >= utils_1.Game.dragonLevels.length - 1)\n            return null;\n        // higher value = lower priority\n        // once your favorite aura has been researched, deprioritize dragon upgrades till you have the 2nd one\n        const auraPenalty = this.context.getAvailableDragonAuras().byName[options_1.default.dragon.auras[0]]\n            ? 1.5\n            : 1;\n        // focus on buying cheap upgrades first\n        const upgradePenalty = 0.25 * utils_1.Game.UpgradesInStore.filter(x => !x.pool && x.getPrice() <= 10e6).length;\n        // upgrading dragon should only come when there's extra cash\n        const penalty = 3 + auraPenalty + upgradePenalty;\n        const lvl = utils_1.Game.dragonLevels[utils_1.Game.dragonLevel];\n        const match = lvl.costStr().match(/^(\\d+) (.*)$/) || [];\n        const amount = parseInt(match[1]);\n        const unit = match[2];\n        if (!amount || Number.isNaN(amount) || !unit) {\n            console.warn('[Automator:getDragonStats()] Cannot parse: %s', lvl.costStr());\n            return null;\n        }\n        if (!this.handlers[unit]) {\n            console.warn('[Automator:getDragonStats()] Unknown unit: %s', lvl.costStr());\n            return null;\n        }\n        const goal = this.handlers[unit](amount);\n        const ratio = utils_1.Game.cookies / (goal.cookies * penalty);\n        const base = { ratio, cookies: goal.cookies };\n        if (ratio >= 1) {\n            // there are enough buildings / cookies bought to upgrade\n            if (lvl.cost()) {\n                return {\n                    type: 'buy',\n                    ...base,\n                    buy: () => {\n                        this.context.buy({ name: 'dragon', buy: () => utils_1.Game.UpgradeDragon() });\n                        (0, utils_1.fixMenuBug)();\n                    },\n                    log: () => ({\n                        msg: `🔥 Trained your dragon for the low low cost of ${lvl.costStr()} \\n(${lvl.action})`,\n                        color: 'orange'\n                    }),\n                };\n            }\n            // need to buy more buildings\n            return {\n                type: 'buy',\n                ...base,\n                buy: () => this.context.buy({ buy: () => goal.buy() }),\n                log: () => ({ msg: `🐲 Preparing a feast` }),\n            };\n        }\n        if (ratio < options_1.default.dragon.waitRatios[goal.type])\n            return null;\n        return {\n            type: 'wait',\n            ...base,\n            log: () => ({\n                msg: `🐲 Raising cookies to feed the dragon, need ${(0, utils_1.formatAmount)(goal.cookies)} to get ${lvl.costStr()}`,\n                eta: this.getEta(goal.cookies),\n            }),\n        };\n    }\n}\nexports[\"default\"] = DragonBuyer;\n\n\n//# sourceURL=webpack://@smirea/cookie-clicker-bot/./src/timers/BuyTimer/DragonBuyer.ts?");

/***/ }),

/***/ "./src/timers/BuyTimer/SantaBuyer.ts":
/*!*******************************************!*\
  !*** ./src/timers/BuyTimer/SantaBuyer.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst utils_1 = __webpack_require__(/*! src/utils */ \"./src/utils.ts\");\nconst Buyer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! ./Buyer */ \"./src/timers/BuyTimer/Buyer.ts\"));\nclass SantaBuyer extends Buyer_1.default {\n    scale(x) { return x ** 2; }\n    getOrders() {\n        if (!utils_1.Game.Upgrades['A festive hat'].bought)\n            return null;\n        if (utils_1.Game.cookiesPs < 1e3)\n            return null;\n        if (utils_1.Game.santaLevel >= utils_1.Game.santaLevels.length - 1)\n            return null;\n        const price = Math.pow(utils_1.Game.santaLevel + 1, utils_1.Game.santaLevel + 1);\n        const base = {\n            ratio: utils_1.Game.cookies / (price * 4),\n            cookies: price,\n        };\n        if (base.ratio >= 1) {\n            return {\n                type: 'buy',\n                ...base,\n                buy: () => this.context.buy({\n                    buy: () => {\n                        utils_1.Game.UpgradeSanta();\n                        (0, utils_1.fixMenuBug)();\n                    },\n                }),\n                log: () => ({ msg: '🎅 Ho Ho Ho!', color: 'crimson' }),\n            };\n        }\n        if (base.ratio >= 0.75) {\n            return {\n                type: 'wait',\n                ...base,\n                log: () => ({\n                    msg: `🎅 'Twas the night before X-MAS!`,\n                    eta: this.getEta(price),\n                }),\n            };\n        }\n        return null;\n    }\n}\nexports[\"default\"] = SantaBuyer;\n\n\n//# sourceURL=webpack://@smirea/cookie-clicker-bot/./src/timers/BuyTimer/SantaBuyer.ts?");

/***/ }),

/***/ "./src/timers/BuyTimer/UpgradeBuyer.ts":
/*!*********************************************!*\
  !*** ./src/timers/BuyTimer/UpgradeBuyer.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst options_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! src/options */ \"./src/options.ts\"));\nconst utils_1 = __webpack_require__(/*! src/utils */ \"./src/utils.ts\");\nconst Buyer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! ./Buyer */ \"./src/timers/BuyTimer/Buyer.ts\"));\nclass UpgradeBuyer extends Buyer_1.default {\n    scale(x) { return x; }\n    get upgradeFatigue() { return this.context.upgradeFatigue || 1; }\n    getOrders() {\n        var _a;\n        if (utils_1.Game.cookiesPs < 1)\n            return null;\n        const active = this.context.getAvailableUpgrades()\n            .sort((a, b) => this.getWillingness(a) - this.getWillingness(b));\n        const next = ((_a = active[0]) === null || _a === void 0 ? void 0 : _a.canBuy())\n            ? active[0]\n            // just buy really cheap upgrades\n            : active.find(x => x.getPrice() <= utils_1.Game.cookies * 0.01);\n        if (next) {\n            return {\n                type: 'buy',\n                cookies: next.getPrice(),\n                ratio: utils_1.Game.cookies / next.getPrice(),\n                buy: () => this.context.buy(next),\n                log: () => ({\n                    msg: `💹 Bought new upgrade: ${next.name}\\n(${next.desc})`,\n                    // color: 'lightgreen',\n                }),\n            };\n        }\n        if (!active[0])\n            return null;\n        const waitPrice = active[0].getPrice() * options_1.default.upgradeWait * this.upgradeFatigue;\n        const nextWait = (active[0] && utils_1.Game.cookies >= 30e3 && utils_1.Game.cookies >= waitPrice\n            ? active[0]\n            : null);\n        if (!nextWait)\n            return null;\n        const waitPct = Math.round(utils_1.Game.cookies / active[0].getPrice() * 100) + '%';\n        return {\n            type: 'wait',\n            ratio: utils_1.Game.cookies / this.getWillingness(nextWait),\n            cookies: nextWait.getPrice(),\n            log: () => ({\n                msg: `🟡 Waiting to buy new upgrade: ${nextWait.name}`,\n                eta: this.getEta(nextWait.getPrice()),\n                extra: waitPct,\n            }),\n        };\n    }\n    /** takes into account willingness factor, used for sorting */\n    getWillingness(upgrade) {\n        let price = upgrade.getPrice();\n        price *= this.upgradeFatigue;\n        if (/cookie production multiplier/i.test(upgrade.desc))\n            price *= 1.2;\n        else if (/clicking gains/i.test(upgrade.desc))\n            price *= 0.8;\n        else if (/grandmas|twice/i.test(upgrade.desc))\n            price *= 0.6;\n        else if (/mouse and cursor/i.test(upgrade.desc))\n            price *= 0.5;\n        else if (/prestige/i.test(upgrade.desc))\n            price *= 0.01; // highest value\n        return price;\n    }\n}\nexports[\"default\"] = UpgradeBuyer;\n\n\n//# sourceURL=webpack://@smirea/cookie-clicker-bot/./src/timers/BuyTimer/UpgradeBuyer.ts?");

/***/ }),

/***/ "./src/timers/BuyTimer/index.ts":
/*!**************************************!*\
  !*** ./src/timers/BuyTimer/index.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst Timer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! src/timers/Timer */ \"./src/timers/Timer.ts\"));\nconst utils_1 = __webpack_require__(/*! src/utils */ \"./src/utils.ts\");\nconst BuildingBuyer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! ./BuildingBuyer */ \"./src/timers/BuyTimer/BuildingBuyer.ts\"));\nconst DragonBuyer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! ./DragonBuyer */ \"./src/timers/BuyTimer/DragonBuyer.ts\"));\nconst SantaBuyer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! ./SantaBuyer */ \"./src/timers/BuyTimer/SantaBuyer.ts\"));\nconst UpgradeBuyer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! ./UpgradeBuyer */ \"./src/timers/BuyTimer/UpgradeBuyer.ts\"));\nclass BuyTimer extends Timer_1.default {\n    constructor() {\n        super(...arguments);\n        this.type = 'default';\n        this.defaultTimeout = 15;\n        this.buyers = {\n            BuildingBuyer: new BuildingBuyer_1.default(this.context),\n            DragonBuyer: new DragonBuyer_1.default(this.context),\n            SantaBuyer: new SantaBuyer_1.default(this.context),\n            UpgradeBuyer: new UpgradeBuyer_1.default(this.context),\n        };\n    }\n    sideEffects() {\n        var _a, _b;\n        this.context.cpsCache = {};\n        this.context.lastState.buildings = (_b = (_a = this.buyers.BuildingBuyer) === null || _a === void 0 ? void 0 : _a.getSortedBuildings()) !== null && _b !== void 0 ? _b : [];\n    }\n    execute() {\n        if (this.context.upgradeFatigue > 0 && utils_1.Game.cookiesPs >= 1e10) {\n            this.context.upgradeFatigue = 0;\n        }\n        const orders = this.getBuyOrders();\n        const next = orders[0];\n        const log = (item) => {\n            if (!item.log)\n                return;\n            const { msg, ...config } = item.log();\n            this.context.log(msg, config);\n        };\n        if ((next === null || next === void 0 ? void 0 : next.type) === 'buy') {\n            log(next); // must happen before buy() since it might use the current state to log\n            next.buy();\n        }\n        else if ((next === null || next === void 0 ? void 0 : next.type) === 'wait') {\n            log(next);\n            this.scaleTimeout(5);\n        }\n        else {\n            this.scaleTimeout(10);\n            return this.context.log(\"You're too poor... but that's a good thing!\");\n        }\n    }\n    getBuyOrders() {\n        const result = [];\n        for (const buyer of Object.values(this.buyers)) {\n            for (const order of buyer.execute()) {\n                result.push({\n                    buyer: buyer.constructor.name,\n                    ...order,\n                });\n            }\n        }\n        result.sort((a, b) => b.score - a.score);\n        return result;\n    }\n    print() {\n        var _a;\n        const counters = {};\n        const table = {};\n        for (const { buyer, type, cookies, score, log } of this.getBuyOrders()) {\n            const count = counters[buyer] = (counters[buyer] || 0) + 1;\n            let name = `[${type.padStart(4)}] ` + buyer.replace(/Buyer$/, '');\n            if (count > 1)\n                name += '_' + count;\n            table[name] = {\n                score,\n                cookies,\n                log: (_a = log === null || log === void 0 ? void 0 : log().msg) !== null && _a !== void 0 ? _a : null,\n            };\n        }\n        console.table(table);\n    }\n}\nexports[\"default\"] = BuyTimer;\n\n\n//# sourceURL=webpack://@smirea/cookie-clicker-bot/./src/timers/BuyTimer/index.ts?");

/***/ }),

/***/ "./src/timers/ClickCookieTimer.ts":
/*!****************************************!*\
  !*** ./src/timers/ClickCookieTimer.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst utils_1 = __webpack_require__(/*! src/utils */ \"./src/utils.ts\");\nconst Timer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! src/timers/Timer */ \"./src/timers/Timer.ts\"));\nconst options_1 = __webpack_require__(/*! src/options */ \"./src/options.ts\");\nclass ClickCookieTimer extends Timer_1.default {\n    constructor() {\n        super(...arguments);\n        this.type = 'clicker';\n        this.defaultTimeout = (0, options_1.msToTicks)(51);\n        // mouseEvent = new MouseEvent('click', { detail: 1 });\n        this.mouseEvent = undefined;\n    }\n    execute() {\n        utils_1.Game.ClickCookie(this.mouseEvent);\n    }\n}\nexports[\"default\"] = ClickCookieTimer;\n\n\n//# sourceURL=webpack://@smirea/cookie-clicker-bot/./src/timers/ClickCookieTimer.ts?");

/***/ }),

/***/ "./src/timers/ClickNewsTimer.ts":
/*!**************************************!*\
  !*** ./src/timers/ClickNewsTimer.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst utils_1 = __webpack_require__(/*! src/utils */ \"./src/utils.ts\");\nconst Timer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! src/timers/Timer */ \"./src/timers/Timer.ts\"));\nconst options_1 = __webpack_require__(/*! src/options */ \"./src/options.ts\");\nclass ClickNewsTimer extends Timer_1.default {\n    constructor() {\n        super(...arguments);\n        this.type = 'clicker';\n        this.defaultTimeout = (0, options_1.msToTicks)(1e3);\n    }\n    execute() {\n        if (!utils_1.Game.TickerEffect)\n            return;\n        if (typeof utils_1.Game.TickerEffect !== 'object')\n            return;\n        if (utils_1.Game.TickerEffect.type !== 'fortune')\n            return;\n        this.context.log('📰 Just in: ' + utils_1.Game.Ticker);\n        utils_1.Game.tickerL.click(); // click on fortune news headlines\n    }\n}\nexports[\"default\"] = ClickNewsTimer;\n\n\n//# sourceURL=webpack://@smirea/cookie-clicker-bot/./src/timers/ClickNewsTimer.ts?");

/***/ }),

/***/ "./src/timers/DragonAuraTimer.ts":
/*!***************************************!*\
  !*** ./src/timers/DragonAuraTimer.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst utils_1 = __webpack_require__(/*! src/utils */ \"./src/utils.ts\");\nconst Timer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! src/timers/Timer */ \"./src/timers/Timer.ts\"));\nconst options_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! src/options */ \"./src/options.ts\"));\nclass DragonAuraTimer extends Timer_1.default {\n    constructor() {\n        super(...arguments);\n        this.type = 'default';\n        this.defaultTimeout = 2000;\n    }\n    startDelay() { return this.defaultTimeout; }\n    execute() {\n        const auras = this.context.getAvailableDragonAuras();\n        const has2Auras = utils_1.Game.dragonLevel >= utils_1.Game.dragonLevels.length - 1;\n        const toSelectIds = options_1.default.dragon.auras.map(name => { var _a, _b; return (_b = (_a = auras.byName[name]) === null || _a === void 0 ? void 0 : _a.index) !== null && _b !== void 0 ? _b : -1; });\n        let choices = has2Auras ? 2 : 1;\n        for (const name of options_1.default.dragon.auras) {\n            if (choices <= 0)\n                break;\n            const aura = auras.byName[name];\n            if (!aura)\n                continue;\n            --choices;\n            if (utils_1.Game.hasAura(name))\n                continue;\n            const highestBuilding = Array.from(utils_1.Game.ObjectsById).reverse().find(x => x.amount > 0);\n            if (!highestBuilding)\n                break; // weird but whatever\n            if (highestBuilding.amount === 1) {\n                highestBuilding.sell();\n                this.context.log(`🤫 Sneakily selling 1 ✕ ${highestBuilding.name} so the dragon doesn't eat it`);\n            }\n            let slot = has2Auras && toSelectIds.includes(utils_1.Game.dragonAura) ? 1 : 0;\n            utils_1.Game.SetDragonAura(aura.index, slot);\n            const btn = (0, utils_1.$)('#promptOption0');\n            if (!btn || btn.innerText.trim().toLowerCase() !== 'confirm') {\n                console.warn('[DragonAuraTimer] FML the confirm changed');\n                break;\n            }\n            btn.click();\n            this.context.log(`🎇 Changed Dragon Aura (slot ${slot + 1}): ${aura.name}\\n(${aura.desc})`, { color: 'yellow' });\n            break;\n        }\n        utils_1.Game.ClosePrompt();\n        (0, utils_1.fixMenuBug)();\n    }\n}\nexports[\"default\"] = DragonAuraTimer;\n\n\n//# sourceURL=webpack://@smirea/cookie-clicker-bot/./src/timers/DragonAuraTimer.ts?");

/***/ }),

/***/ "./src/timers/GardenMinigameTimer.ts":
/*!*******************************************!*\
  !*** ./src/timers/GardenMinigameTimer.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst utils_1 = __webpack_require__(/*! src/utils */ \"./src/utils.ts\");\nconst Timer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! src/timers/Timer */ \"./src/timers/Timer.ts\"));\nconst options_1 = (0, tslib_1.__importStar)(__webpack_require__(/*! src/options */ \"./src/options.ts\"));\nclass GardenMinigameTimer extends Timer_1.default {\n    constructor() {\n        super(...arguments);\n        this.type = 'default';\n        this.defaultTimeout = (0, options_1.msToTicks)(1000);\n    }\n    startDelay() { return this.defaultTimeout; }\n    execute() {\n        const garden = this.garden;\n        if (!garden)\n            return this.scaleTimeout(10); // git gud first\n        const { totalPlots, lvl, x1, x2, y1, y2 } = this.config;\n        this.setStrategy();\n        this.setSoil();\n        const emptyPlots = [];\n        const usedPlots = [];\n        const layout = MUTATION_LAYOUTS.double[lvl](x1, y1);\n        const shouldHarvest = (plant, x, y, age) => {\n            const isMature = age >= plant.mature;\n            const isCloseToDeath = isMature && (plant.weed || this.getDecayTicks(x, y) <= this.strategy.harvestDecayTicks);\n            if (this.strategy.optimalMutationStrategy) {\n                if (layout.get(x, y))\n                    return isCloseToDeath;\n                return isMature || plant.weed;\n            }\n            return isCloseToDeath;\n        };\n        for (let x = x1; x < x2; ++x) {\n            for (let y = y1; y < y2; ++y) {\n                const tile = garden.getTile(x, y);\n                const [plantId, age] = tile;\n                if (!plantId) {\n                    emptyPlots.push({ x, y });\n                    continue;\n                }\n                const plant = garden.plantsById[plantId - 1];\n                if (shouldHarvest(plant, x, y, age)) {\n                    if (garden.harvest(x, y)) {\n                        this.context.log(`🥀 Harvested ${plant.name} at [${x - x1}, ${y - y1}]`);\n                        emptyPlots.push({ x, y });\n                        return;\n                    }\n                }\n                usedPlots.push({ x, y, plant, age });\n            }\n        }\n        if (this.strategy.optimalMutationStrategy) {\n            return void this.runOptimalMutationStrategy(layout);\n        }\n        // wait for stuff to be done if too many plots are used\n        if (!emptyPlots.length || usedPlots.length >= totalPlots * this.strategy.usedPlotsRatio)\n            return;\n        const { cpsMultiple } = this.context.getBuffs();\n        if (cpsMultiple > this.strategy.maxCpsBuff)\n            return;\n        const availablePlants = garden.plantsById.filter(p => p.unlocked && garden.canPlant(p));\n        if (!availablePlants.length)\n            return;\n        const plantOptions = availablePlants\n            .map(plant => {\n            const base = this.strategy.plantOdds[plant.key];\n            return {\n                key: plant.key,\n                plant,\n                odds: (0, utils_1.clamp)(typeof base === 'number'\n                    ? base\n                    : plant.weed\n                        ? this.strategy.defaultOdds.weed\n                        : this.strategy.defaultOdds.default, 0, 10),\n            };\n        });\n        const value = Math.random() * plantOptions.reduce((s, x) => s + x.odds, 0);\n        let sum = 0;\n        const toPlant = plantOptions.find(x => {\n            sum += x.odds;\n            return value <= sum;\n        }).plant;\n        const { x, y } = emptyPlots[Math.floor(emptyPlots.length * Math.random())];\n        this.plant(toPlant, x, y);\n    }\n    get garden() { return utils_1.Game.Objects.Farm.minigame; }\n    get config() {\n        const garden = this.garden;\n        const lvl = Math.min(utils_1.Game.Objects.Farm.level - 1, garden.plotLimits.length);\n        const [x1, y1, x2, y2] = garden.plotLimits[lvl];\n        const totalPlots = (x2 - x1) * (y2 - y1);\n        return {\n            garden,\n            lvl,\n            x1,\n            x2,\n            y1,\n            y2,\n            totalPlots,\n        };\n    }\n    plant(plant, x, y) {\n        const { garden, x1, y1 } = this.config;\n        if (!plant.unlocked || !garden.canPlant(plant))\n            return false;\n        garden.seedSelected = plant.id;\n        garden.clickTile(x, y);\n        this.context.log(`🌷 Planted ${plant.name} at [${x - x1}, ${y - y1}]: ${plant.effsStr}`);\n        return true;\n    }\n    runOptimalMutationStrategy(layout) {\n        const { garden, x1, x2, y1, y2 } = this.config;\n        const getParents = (ox, oy) => {\n            const parents = [];\n            for (let x = ox - 1; x <= ox + 1; ++x) {\n                for (let y = oy - 1; y < oy + 2; ++y) {\n                    if (x === ox && y === oy)\n                        continue;\n                    const tile = garden.getTile(x, y);\n                    if (!tile[0])\n                        continue;\n                    parents.push(garden.plantsById[tile[0] - 1]);\n                }\n            }\n            return parents;\n        };\n        for (let x = x1; x < x2; ++x) {\n            for (let y = y1; y < y2; ++y) {\n                const [plantId] = garden.getTile(x, y);\n                if (plantId)\n                    continue; // already a seed\n                const target = layout.get(x, y);\n                if (!target)\n                    continue; // it's supposed to be empty\n                const parents = getParents(x, y);\n                const plantIndependent = () => {\n                    const options = garden.plantsById\n                        .filter(plant => !plant.unlocked)\n                        .map(plant => MUTATION_RULES[plant.key].map(opt => ({ plant, ...opt })))\n                        .flat()\n                        .filter(option => option.parents.every(key => garden.plants[key].unlocked));\n                    if (!options.length)\n                        return;\n                    const choice = (0, utils_1.sample)(options);\n                    const toPlant = garden.plants[(0, utils_1.sample)(choice.parents)];\n                    if (toPlant.weed)\n                        return;\n                    // console.log('0 | plant %s at [%d, %d] to get %s', toPlant.key, x, y, choice.plant.key);\n                    this.plant(toPlant, x, y);\n                };\n                if (!parents.length)\n                    return plantIndependent();\n                const mates = parents.map(parent => parent.children\n                    .filter(key => key !== parent.key)\n                    .map(key => garden.plants[key])\n                    .filter(plant => !plant.unlocked)\n                    .map(plant => MUTATION_RULES[plant.key].map(opt => ({ plant, ...opt })))\n                    .flat()\n                    .filter(option => option.parents.every(key => garden.plants[key].unlocked) &&\n                    option.parents.some(key => key === parent.key))\n                    .map(option => {\n                    const r = Array.from(option.parents);\n                    // splicing supports both duplicate parents and distinct parents\n                    r.splice(option.parents.indexOf(parent.key), 1);\n                    return {\n                        child: option.plant.key,\n                        parent: garden.plants[r[0]],\n                    };\n                })\n                    .filter(option => !option.parent.weed)).flat();\n                const other = (0, utils_1.sample)(mates);\n                if (other) {\n                    // console.log('1 | plant %s at [%d, %d] to get %s', other.parent.key, x, y, other.child);\n                    this.plant(other.parent, x, y);\n                }\n                else\n                    plantIndependent();\n            }\n        }\n    }\n    setStrategy() {\n        var _a;\n        const garden = this.garden;\n        const seeds = garden.plantsById.filter(p => p.unlocked).length;\n        const active = options_1.default.garden.strategies.filter(s => seeds >= s.conditions.minSeeds);\n        const nextStrategy = active[active.length - 1] || active[0];\n        if (((_a = this.strategy) === null || _a === void 0 ? void 0 : _a.name) !== nextStrategy.name) {\n            this.context.log('🏡 Garden strategy: ' + nextStrategy.name);\n        }\n        this.strategy = {\n            usedPlotsRatio: 1,\n            harvestDecayTicks: 1,\n            maxCpsBuff: 1,\n            soil: 'clay',\n            defaultOdds: { default: 1, weed: 0.25 },\n            plantOdds: {},\n            optimalMutationStrategy: true,\n            ...nextStrategy,\n        };\n    }\n    setSoil() {\n        var _a, _b;\n        const soil = (_a = this.garden) === null || _a === void 0 ? void 0 : _a.soils[this.strategy.soil];\n        if (!soil || this.garden.soil === soil.id || soil.req > utils_1.Game.Objects.Farm.amount)\n            return;\n        (_b = l('gardenSoil-' + soil.id)) === null || _b === void 0 ? void 0 : _b.click();\n        this.context.log(`🪴 Set soil to ${soil.name}\\n${soil.effsStr}`);\n    }\n    /**\n     * yoinked this horror directly from the game source code: garden.tileTooltip()\n     *\n     * @returns time in seconds\n     */\n    getMatureTime(x, y) {\n        const M = this.garden;\n        const tile = M.getTile(x, y);\n        const me = M.plantsById[tile[0] - 1];\n        return ((100 / (M.plotBoost[y][x][0] * (me.ageTick + me.ageTickR / 2))) * ((me.mature - tile[1]) / 100) * M.stepT) * 30;\n    }\n    /**\n     * yoinked this horror directly from the game source code: garden.tileTooltip()\n     *\n     * @returns time in seconds\n     */\n    getDecayTime(x, y) {\n        const M = this.garden;\n        const tile = M.getTile(x, y);\n        const me = M.plantsById[tile[0] - 1];\n        return ((100 / (M.plotBoost[y][x][0] * (me.ageTick + me.ageTickR / 2))) * ((100 - tile[1]) / 100) * M.stepT) * 30;\n    }\n    /** yoinked this horror directly from the game source code: garden.tileTooltip() */\n    getDecayTicks(x, y) {\n        const M = this.garden;\n        const tile = M.getTile(x, y);\n        const me = M.plantsById[tile[0] - 1];\n        return Math.ceil((100 / (M.plotBoost[y][x][0] * (me.ageTick + me.ageTickR / 2))) *\n            ((100 - tile[1]) / 100));\n    }\n}\nexports[\"default\"] = GardenMinigameTimer;\nclass Layout {\n    constructor(x1, y1, matrix) {\n        this.x1 = x1;\n        this.y1 = y1;\n        this.matrix = matrix;\n        this.height = matrix.length;\n        this.width = matrix[0].length;\n    }\n    get(x, y) { return this.matrix[y - this.y1][x - this.x1]; }\n    print() {\n        for (const row of this.matrix) {\n            console.log(row.map(x => x ? x : '.').join(' '));\n        }\n    }\n}\nconst parseLayouts = (str) => str.trim().split('\\n\\n').map(block => (x1, y1) => new Layout(x1, y1, block\n    .trim()\n    .split('\\n')\n    .map(line => line.trim().split(/\\s+/).map(ch => ch === '.' ? null : ch))));\n// from: https://cookieclicker.fandom.com/wiki/Garden#Mutation_Setups\nconst MUTATION_LAYOUTS = {\n    // single: parseLayouts(`\n    //     1 1\n    //     . .\n    //     . 1 .\n    //     . 1 .\n    //     . . .\n    //     1 1 1\n    //     . . .\n    //     . . . .\n    //     1 1 1 1\n    //     . . . .\n    //     1 . . 1\n    //     . . 1 .\n    //     . 1 . .\n    //     1 . . 1\n    //     1 . 1 . 1\n    //     . . . . .\n    //     1 1 . 1 1\n    //     . . . . .\n    //     1 1 . 1 1\n    //     . . . . .\n    //     . . . . .\n    //     1 1 . 1 1\n    //     . . . . .\n    //     . 1 . . 1 .\n    //     . 1 . . 1 .\n    //     . . . . . .\n    //     . 1 . . 1 .\n    //     . 1 . . 1 .\n    //     . . . . . .\n    //     1 1 . 1 1 1\n    //     . . . . . .\n    //     . . . . . .\n    //     1 1 . 1 1 1\n    //     . . . . . .\n    // `),\n    double: parseLayouts(`\n        1 2\n        . .\n\n        . 1 .\n        . 2 .\n\n        . . .\n        1 2 1\n        . . .\n\n        . . . .\n        1 2 2 1\n        . . . .\n\n        1 . . 1\n        . 2 . .\n        . . 2 .\n        1 . . 1\n\n        1 . 2 . 1\n        . . . . .\n        . 2 . 1 2\n        1 . . . .\n\n        1 2 . 1 2\n        . . . . .\n        . . . . .\n        1 2 . 1 2\n        . . . . .\n\n        . 1 . . 1 .\n        . 2 . . 2 .\n        . . . . . .\n        . 1 . . 1 .\n        . 2 . . 2 .\n\n        . . . . . .\n        1 2 1 . 2 1\n        . . . . . .\n        . . . . . .\n        1 2 . 1 2 1\n        . . . . . .\n    `),\n};\n// from: https://cookieclicker.fandom.com/wiki/Garden#Species\nconst MUTATION_RULES = {\n    bakerWheat: [\n        { odds: 0.2, parents: ['bakerWheat', 'bakerWheat'] },\n        { odds: 0.05, parents: ['thumbcorn', 'thumbcorn'] },\n    ],\n    thumbcorn: [\n        { odds: 0.05, parents: ['bakerWheat', 'bakerWheat'] },\n        { odds: 0.1, parents: ['thumbcorn', 'thumbcorn'] },\n        { odds: 0.02, parents: ['cronerice', 'cronerice'] },\n    ],\n    cronerice: [\n        { odds: 0.01, parents: ['bakerWheat', 'thumbcorn'] },\n    ],\n    gildmillet: [\n        { odds: 0.03, parents: ['cronerice', 'thumbcorn'] },\n    ],\n    clover: [\n        { odds: 0.03, parents: ['bakerWheat', 'gildmillet'] },\n        { odds: 0.007, parents: ['clover', 'clover'] },\n    ],\n    goldenClover: [\n        { odds: 0.07, parents: ['bakerWheat', 'gildmillet'] },\n        { odds: 0.001, parents: ['clover', 'clover'] },\n        // 4 parents layout?!\n    ],\n    shimmerlily: [\n        { odds: 0.02, parents: ['clover', 'gildmillet'] },\n    ],\n    elderwort: [\n        { odds: 0.01, parents: ['shimmerlily', 'cronerice'] },\n        { odds: 0.002, parents: ['wrinklegill', 'cronerice'] },\n    ],\n    bakeberry: [\n        { odds: 0.001, parents: ['bakerWheat', 'bakerWheat'] },\n    ],\n    chocoroot: [\n        { odds: 0.1, parents: ['bakerWheat', 'brownMold'] },\n    ],\n    whiteChocoroot: [\n        { odds: 0.1, parents: ['chocoroot', 'whiteMildew'] },\n    ],\n    whiteMildew: [\n        { odds: 0.5, parents: ['brownMold', 'whiteMildew'] },\n    ],\n    brownMold: [\n    // { odds: 0.5, parents: ['whiteMildew', 'brownMold'] },\n    ],\n    meddleweed: [\n    // meh\n    ],\n    whiskerbloom: [\n        { odds: 0.01, parents: ['shimmerlily', 'whiteChocoroot'] },\n    ],\n    chimerose: [\n        { odds: 0.05, parents: ['shimmerlily', 'whiskerbloom'] },\n        { odds: 0.005, parents: ['chimerose', 'chimerose'] },\n    ],\n    nursetulip: [\n        { odds: 0.05, parents: ['whiskerbloom', 'whiskerbloom'] },\n    ],\n    drowsyfern: [\n        { odds: 0.005, parents: ['chocoroot', 'keenmoss'] },\n    ],\n    wardlichen: [\n        { odds: 0.005, parents: ['cronerice', 'keenmoss'] },\n        { odds: 0.005, parents: ['cronerice', 'whiteMildew'] },\n        // special case ignored\n    ],\n    keenmoss: [\n        { odds: 0.1, parents: ['greenRot', 'brownMold'] },\n    ],\n    queenbeet: [\n        { odds: 0.01, parents: ['bakeberry', 'chocoroot'] },\n    ],\n    queenbeetLump: [\n    // meh, ignored - 8x Queenbeet (0.1%)\n    ],\n    duketater: [\n        { odds: 0.01, parents: ['queenbeet', 'queenbeet'] },\n    ],\n    crumbspore: [\n        { odds: 0.005, parents: ['doughshroom', 'doughshroom'] },\n    ],\n    doughshroom: [\n        { odds: 0.005, parents: ['crumbspore', 'crumbspore'] },\n    ],\n    glovemorel: [\n        { odds: 0.02, parents: ['crumbspore', 'thumbcorn'] },\n    ],\n    cheapcap: [\n        { odds: 0.04, parents: ['crumbspore', 'shimmerlily'] },\n    ],\n    foolBolete: [\n        { odds: 0.04, parents: ['doughshroom', 'greenRot'] },\n    ],\n    wrinklegill: [\n        { odds: 0.06, parents: ['crumbspore', 'brownMold'] },\n    ],\n    greenRot: [\n        { odds: 0.05, parents: ['whiteMildew', 'clover'] },\n    ],\n    shriekbulb: [\n    // ignore - do not try to plant\n    // [0.001, 'wrinklegill', 'elderwort'],\n    // ignore 5x Elderword (0.1%)\n    // ignore 3x Duketater (0.5%)\n    // ignore 4x Doughshroom (0.2%)\n    ],\n    tidygrass: [\n        { odds: 0.02, parents: ['bakeberry', 'whiteChocoroot'] },\n    ],\n    everdaisy: [\n    // ignore 3x Tidygrass, 3x Elderwort (0.2%)\n    ],\n    ichorpuff: [\n        { odds: 0.002, parents: ['elderwort', 'crumbspore'] },\n    ],\n};\n\n\n//# sourceURL=webpack://@smirea/cookie-clicker-bot/./src/timers/GardenMinigameTimer.ts?");

/***/ }),

/***/ "./src/timers/GrimoireMinigameTimer.ts":
/*!*********************************************!*\
  !*** ./src/timers/GrimoireMinigameTimer.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst options_1 = __webpack_require__(/*! src/options */ \"./src/options.ts\");\nconst Timer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! src/timers/Timer */ \"./src/timers/Timer.ts\"));\nconst utils_1 = __webpack_require__(/*! src/utils */ \"./src/utils.ts\");\nclass GrimoireMinigameTimer extends Timer_1.default {\n    constructor() {\n        super(...arguments);\n        this.type = 'default';\n        this.maxCounter = 0;\n        this.defaultTimeout = (0, options_1.msToTicks)(500);\n    }\n    startDelay() { return this.defaultTimeout; }\n    execute() {\n        const grimoire = utils_1.Game.Objects['Wizard tower'].minigame;\n        if (!grimoire)\n            return this.scaleTimeout(10); // git gud first\n        const { cpsMultiple, multClick, negativeBuffs, positiveBuffs, buffs } = this.context.getBuffs();\n        const pctMagic = grimoire.magic / grimoire.magicM;\n        if (\n        // Devastation happens almost constantly so ignore it\n        (buffs.length > 1 || !buffs.includes('Devastation')) && (cpsMultiple > 100\n            || (cpsMultiple > 5 && pctMagic > 0.65 && !negativeBuffs)\n            || multClick > 100\n            || (multClick > 5 && pctMagic > 0.65 && !negativeBuffs))) {\n            return this.cast(grimoire.spells['stretch time']);\n        }\n        if (grimoire.magic === grimoire.magicM) {\n            ++this.maxCounter;\n            if (this.maxCounter < 10)\n                return; // wait a bit in case others want to use the book\n            if (!positiveBuffs)\n                return this.cast(grimoire.spells['hand of fate']);\n            if (utils_1.Game.cookies >= this.context.realCps * 20) {\n                return this.cast(grimoire.spells['conjure baked goods']);\n            }\n        }\n    }\n    cast(spell) {\n        const grimoire = utils_1.Game.Objects['Wizard tower'].minigame;\n        if (grimoire.getSpellCost(spell) > grimoire.magic)\n            return;\n        this.maxCounter = 0;\n        if (grimoire.castSpell(spell)) {\n            this.context.log(`🪄 Abra Cadabra: ${spell.name}\\n(${spell.desc})`);\n        }\n        else {\n            this.context.log(`🪄 Abra Ca..Whoops!: ${spell.name}\\n(${spell.failDesc})`);\n        }\n    }\n}\nexports[\"default\"] = GrimoireMinigameTimer;\n\n\n//# sourceURL=webpack://@smirea/cookie-clicker-bot/./src/timers/GrimoireMinigameTimer.ts?");

/***/ }),

/***/ "./src/timers/LogTimer.ts":
/*!********************************!*\
  !*** ./src/timers/LogTimer.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst Timer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! src/timers/Timer */ \"./src/timers/Timer.ts\"));\nconst options_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! src/options */ \"./src/options.ts\"));\nconst package_json_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! ../../package.json */ \"./package.json\"));\nconst utils_1 = __webpack_require__(/*! src/utils */ \"./src/utils.ts\");\nclass LogTimer extends Timer_1.default {\n    constructor() {\n        super(...arguments);\n        this.type = 'default';\n        this.defaultTimeout = 100;\n    }\n    // wait for random states to be initialized\n    startDelay() { return this.defaultTimeout; }\n    execute() {\n        this.printLog();\n        // save log to localStorage\n        if (Math.floor(Date.now() / 1000) % 3 === 0) {\n            localStorage[options_1.default.localStorage.log] = JSON.stringify(this.context.logMessages.slice(-100));\n        }\n    }\n    printLog() {\n        const { logMessages, upgradeFatigue, realCps, lastState: { buildings } } = this.context;\n        const last = logMessages[logMessages.length - 1];\n        const printLogLine = (line) => {\n            const { time, msg, count, eta, extra, color = 'white' } = line;\n            this.lastMessage = { ...line };\n            console.log(`%c%s%c %s %c%s`, 'color:gray', new Date(time).toISOString().slice(11, 19), `color:${color}`, msg, 'color:gray', [\n                count > 1 ? `✕ ${count}` : '',\n                extra,\n                eta ? 'ETA: ' + (0, utils_1.formatDuration)(eta) : '',\n            ].filter(x => x).join(' | '));\n        };\n        if (last && this.lastMessage && this.counter % 15 !== 0) {\n            // only print last log messages\n            const isDifferentMessage = last.id !== this.lastMessage.id;\n            const isDifferentMeta = (last.count !== this.lastMessage.count ||\n                last.eta !== this.lastMessage.eta ||\n                last.extra !== this.lastMessage.extra);\n            if (isDifferentMessage || isDifferentMeta) {\n                const index = logMessages.findIndex(x => x.id != null && x.id === this.lastMessage.id);\n                if (index > -1) {\n                    for (const line of logMessages.slice(index + (isDifferentMessage ? 1 : 0)))\n                        printLogLine(line);\n                }\n            }\n        }\n        else { // clear and print everything\n            console.clear();\n            console.log('%c%s v%s', 'color:gray', package_json_1.default.name, package_json_1.default.version);\n            console.log(`upgradeFatigue: %s | realCps: %s (clicks: %s)`, upgradeFatigue ? Math.round(upgradeFatigue * 100) / 100 + 'x' : 'disabled', (0, utils_1.formatAmount)(realCps), (0, utils_1.formatAmount)(realCps - utils_1.Game.cookiesPs));\n            console.log('%cBuy Order:', 'font-weight:bold');\n            for (const obj of buildings) {\n                console.log('   - %s: %sx', obj.name, obj.relativeValue);\n            }\n            for (const line of logMessages.slice(-1 * options_1.default.showLogs))\n                printLogLine(line);\n        }\n    }\n}\nexports[\"default\"] = LogTimer;\n\n\n//# sourceURL=webpack://@smirea/cookie-clicker-bot/./src/timers/LogTimer.ts?");

/***/ }),

/***/ "./src/timers/PageReloadTimer.ts":
/*!***************************************!*\
  !*** ./src/timers/PageReloadTimer.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst utils_1 = __webpack_require__(/*! src/utils */ \"./src/utils.ts\");\nconst Timer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! src/timers/Timer */ \"./src/timers/Timer.ts\"));\nconst options_1 = (0, tslib_1.__importStar)(__webpack_require__(/*! src/options */ \"./src/options.ts\"));\nclass PageReloadTimer extends Timer_1.default {\n    constructor() {\n        super(...arguments);\n        this.type = 'default';\n        this.defaultTimeout = (0, options_1.msToTicks)(60e3);\n    }\n    execute() {\n        if (!options_1.default.autoReloadMinutes)\n            return this.stop();\n        if (Date.now() - this.context.startDate / 60e3 >= options_1.default.autoReloadMinutes &&\n            this.context.getBuffs().cpsMultiple <= 1) {\n            utils_1.Game.promptOn = 0;\n            global.location.reload();\n            return this.stop();\n        }\n    }\n}\nexports[\"default\"] = PageReloadTimer;\n\n\n//# sourceURL=webpack://@smirea/cookie-clicker-bot/./src/timers/PageReloadTimer.ts?");

/***/ }),

/***/ "./src/timers/PantheonMinigameTimer.ts":
/*!*********************************************!*\
  !*** ./src/timers/PantheonMinigameTimer.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst Timer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! src/timers/Timer */ \"./src/timers/Timer.ts\"));\nconst options_1 = (0, tslib_1.__importStar)(__webpack_require__(/*! src/options */ \"./src/options.ts\"));\nconst utils_1 = __webpack_require__(/*! src/utils */ \"./src/utils.ts\");\nclass PantheonMinigameTimer extends Timer_1.default {\n    constructor() {\n        super(...arguments);\n        this.type = 'default';\n        this.ruinCounter = 0;\n        this.defaultTimeout = (0, options_1.msToTicks)(1000);\n    }\n    startDelay() { return this.defaultTimeout; }\n    get pantheon() { return utils_1.Game.Objects.Temple.minigame; }\n    execute() {\n        if (!this.pantheon)\n            return;\n        const { layout } = options_1.default.pantheon;\n        for (const [slot, godKey] of layout.entries()) {\n            if (!godKey)\n                continue;\n            const god = this.pantheon.gods[godKey];\n            if (this.pantheon.slot[slot] === god.id)\n                continue;\n            this.slotGod(god, slot);\n            return;\n        }\n        if (++this.ruinCounter > 10)\n            this.runRuin();\n    }\n    slotGod(_god, slot) {\n        const pantheon = this.pantheon;\n        if (!pantheon)\n            return false;\n        if (!pantheon.swaps)\n            return false;\n        const god = typeof _god === 'string' ? pantheon.gods[_god] : _god;\n        pantheon.dragGod(god);\n        pantheon.hoverSlot(slot);\n        pantheon.dropGod();\n        this.context.log(`🙏 Started worshipping ${god.name} in ${pantheon.slotNames[slot]}\\n${(god['desc' + (slot + 1)])}`);\n        return true;\n    }\n    runRuin() {\n        var _a, _b;\n        if (utils_1.Game.cookiesPs < 1e6)\n            return;\n        if (utils_1.Game.buffs.Devastation)\n            return false;\n        if (((_a = this.pantheon) === null || _a === void 0 ? void 0 : _a.slot[0]) !== ((_b = this.pantheon) === null || _b === void 0 ? void 0 : _b.gods.ruin.id))\n            return;\n        this.ruinCounter = 0;\n        for (const buildingKey of options_1.default.pantheon.sellForRuin) {\n            const building = utils_1.Game.Objects[buildingKey];\n            const toSell = building.amount - 1;\n            building.sell(toSell);\n            this.context.log(`🙏 Sacrificing for Godzamok: ${toSell} ✕ ${building.name}`);\n        }\n    }\n}\nexports[\"default\"] = PantheonMinigameTimer;\n\n\n//# sourceURL=webpack://@smirea/cookie-clicker-bot/./src/timers/PantheonMinigameTimer.ts?");

/***/ }),

/***/ "./src/timers/SeasonTimer.ts":
/*!***********************************!*\
  !*** ./src/timers/SeasonTimer.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst options_1 = (0, tslib_1.__importStar)(__webpack_require__(/*! src/options */ \"./src/options.ts\"));\nconst Timer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! src/timers/Timer */ \"./src/timers/Timer.ts\"));\nconst utils_1 = __webpack_require__(/*! src/utils */ \"./src/utils.ts\");\nclass SeasonTimer extends Timer_1.default {\n    constructor() {\n        super(...arguments);\n        this.type = 'default';\n        this.defaultTimeout = (0, options_1.msToTicks)(20e3);\n    }\n    startDelay() { return this.defaultTimeout; }\n    execute() {\n        const setSeason = (key) => {\n            if (utils_1.Game.season === key)\n                return true;\n            const { name, triggerUpgrade } = utils_1.Game.seasons[key];\n            if (!triggerUpgrade.canBuy())\n                return false;\n            this.context.buy(triggerUpgrade);\n            this.context.log('🌞 New season ahoy: ' + name);\n            return true;\n        };\n        if (utils_1.Game.season) { // there's still work to be done on the current season\n            const season = config[utils_1.Game.season];\n            if (season.getCount() < season.getTotal())\n                return;\n        }\n        const available = Object.values(config)\n            .filter(s => !options_1.default.season.exclude.includes(s.key))\n            .filter(s => s.getCount() < s.getTotal())\n            .sort((a, b) => a.key.localeCompare(b.key));\n        if (available.length) {\n            setSeason(available[0].key);\n        }\n        else if (setSeason(options_1.default.season.default)) {\n            this.stop();\n        }\n    }\n}\nexports[\"default\"] = SeasonTimer;\nconst config = {\n    christmas: {\n        key: 'christmas',\n        getCount: () => utils_1.Game.GetHowManySantaDrops(),\n        getTotal: () => utils_1.Game.santaDrops.length,\n    },\n    easter: {\n        key: 'easter',\n        getCount: () => utils_1.Game.GetHowManyEggs(),\n        getTotal: () => utils_1.Game.easterEggs.length,\n    },\n    fools: {\n        key: 'fools',\n        getCount: () => 0,\n        getTotal: () => 0,\n    },\n    halloween: {\n        key: 'halloween',\n        getCount: () => utils_1.Game.GetHowManyHalloweenDrops(),\n        getTotal: () => utils_1.Game.halloweenDrops.length,\n    },\n    valentines: {\n        key: 'valentines',\n        getCount: () => utils_1.Game.GetHowManyHeartDrops(),\n        getTotal: () => utils_1.Game.heartDrops.length,\n    },\n};\n\n\n//# sourceURL=webpack://@smirea/cookie-clicker-bot/./src/timers/SeasonTimer.ts?");

/***/ }),

/***/ "./src/timers/ShimmerTimer.ts":
/*!************************************!*\
  !*** ./src/timers/ShimmerTimer.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst utils_1 = __webpack_require__(/*! src/utils */ \"./src/utils.ts\");\nconst Timer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! src/timers/Timer */ \"./src/timers/Timer.ts\"));\nconst options_1 = __webpack_require__(/*! src/options */ \"./src/options.ts\");\nclass ShimmerTimer extends Timer_1.default {\n    constructor() {\n        super(...arguments);\n        this.type = 'clicker';\n        this.defaultTimeout = (0, options_1.msToTicks)(800);\n    }\n    execute() {\n        if (!utils_1.Game.shimmers.length)\n            return;\n        const first = utils_1.Game.shimmers[0];\n        if (utils_1.Game.shimmers.length > 2) {\n            utils_1.Game.shimmers[0].l.click();\n            if (utils_1.Game.shimmers.length > 10)\n                this.scaleTimeout(0.05);\n            else\n                this.scaleTimeout(0.1);\n        }\n        else if (!utils_1.Game.Achievements['Fading luck'].won) {\n            if (first.type === 'golden') {\n                if (first.life <= 100)\n                    first.l.click();\n            }\n            else\n                first.l.click();\n        }\n        else\n            first.l.click();\n    }\n}\nexports[\"default\"] = ShimmerTimer;\n\n\n//# sourceURL=webpack://@smirea/cookie-clicker-bot/./src/timers/ShimmerTimer.ts?");

/***/ }),

/***/ "./src/timers/SugarLumpTimer.ts":
/*!**************************************!*\
  !*** ./src/timers/SugarLumpTimer.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst utils_1 = __webpack_require__(/*! src/utils */ \"./src/utils.ts\");\nconst Timer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! src/timers/Timer */ \"./src/timers/Timer.ts\"));\nconst options_1 = __webpack_require__(/*! src/options */ \"./src/options.ts\");\nclass SugarLumpTimer extends Timer_1.default {\n    constructor() {\n        super(...arguments);\n        this.type = 'clicker';\n        this.defaultTimeout = (0, options_1.msToTicks)(0.5 * 3600e3);\n    }\n    execute() {\n        if (Date.now() - utils_1.Game.lumpT > utils_1.Game.lumpMatureAge)\n            utils_1.Game.clickLump();\n    }\n}\nexports[\"default\"] = SugarLumpTimer;\n\n\n//# sourceURL=webpack://@smirea/cookie-clicker-bot/./src/timers/SugarLumpTimer.ts?");

/***/ }),

/***/ "./src/timers/Timer.ts":
/*!*****************************!*\
  !*** ./src/timers/Timer.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst options_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! src/options */ \"./src/options.ts\"));\nclass Timer {\n    constructor(context) {\n        this.context = context;\n        this.timeout = 0;\n        this.counter = 0;\n    }\n    /** @override add side-effects to the timer that are always run regardless if the timer is started */\n    sideEffects() { }\n    ;\n    get isRunning() { return this.timeout > 0; }\n    get isStopped() { return this.timeout <= 0; }\n    startDelay() { return 0; }\n    get defaultTimeoutMs() { return this.defaultTimeout * options_1.default.tickMs; }\n    start() {\n        this.stop();\n        this.counter = 0;\n        this.timeout = this.startDelay() || this.defaultTimeout;\n    }\n    stop() {\n        this.timeout = 0;\n    }\n    run() {\n        if (this.isStopped)\n            return console.warn(`Timer ${this.constructor.name} is stopped`);\n        this.timeout = this.defaultTimeout;\n        this.execute();\n        ++this.counter;\n    }\n    scaleTimeout(value) {\n        if (this.isStopped)\n            return;\n        this.timeout *= value;\n    }\n}\nexports[\"default\"] = Timer;\n\n\n//# sourceURL=webpack://@smirea/cookie-clicker-bot/./src/timers/Timer.ts?");

/***/ }),

/***/ "./src/timers/WrinklerTimer.ts":
/*!*************************************!*\
  !*** ./src/timers/WrinklerTimer.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\nconst Timer_1 = (0, tslib_1.__importDefault)(__webpack_require__(/*! src/timers/Timer */ \"./src/timers/Timer.ts\"));\nconst options_1 = __webpack_require__(/*! src/options */ \"./src/options.ts\");\nconst utils_1 = __webpack_require__(/*! src/utils */ \"./src/utils.ts\");\nclass WrinklerTimer extends Timer_1.default {\n    constructor() {\n        super(...arguments);\n        this.type = 'default';\n        this.maxCounter = 0;\n        this.defaultTimeout = (0, options_1.msToTicks)(4 * 60e3);\n    }\n    startDelay() { return (0, options_1.msToTicks)(60e3); }\n    execute() {\n        var _a;\n        const numWrinkers = this.context.getActiveWrinklers().length;\n        if (numWrinkers < utils_1.Game.getWrinklersMax())\n            return;\n        ++this.maxCounter;\n        if (this.maxCounter < 100)\n            return;\n        if ((_a = this.context.timers.PantheonMinigameTimer) === null || _a === void 0 ? void 0 : _a.slotGod('scorn', 0)) {\n            this.maxCounter = 0;\n            this.context.log('🐛 POP go the wrinklers');\n            utils_1.Game.CollectWrinklers();\n        }\n    }\n}\nexports[\"default\"] = WrinklerTimer;\n\n\n//# sourceURL=webpack://@smirea/cookie-clicker-bot/./src/timers/WrinklerTimer.ts?");

/***/ }),

/***/ "./src/utils.ts":
/*!**********************!*\
  !*** ./src/utils.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.sample = exports.clamp = exports.fixMenuBug = exports.units = exports.formatAmount = exports.formatDuration = exports.cleanHTML = exports.getCostOfNBuildings = exports.getAffordableBuildingMultiple = exports.Game = exports.global = exports.$$ = exports.$ = void 0;\nconst $ = (selector) => document.querySelector(selector);\nexports.$ = $;\nconst $$ = (selector) => Array.from(document.querySelectorAll(selector));\nexports.$$ = $$;\n// in Tampermonkey context, \"unsafeWindow\" is the global window\nexports.global = window.unsafeWindow || window;\nexports.Game = exports.global.Game;\nconst getAffordableBuildingMultiple = (obj, choices) => choices.find(end => (0, exports.getCostOfNBuildings)(obj, obj.amount + end) <= exports.Game.cookies) || null;\nexports.getAffordableBuildingMultiple = getAffordableBuildingMultiple;\nconst getCostOfNBuildings = (obj, end, amount = obj.amount) => Math.round(amount >= end\n    ? 0\n    : obj.basePrice * (1.15 ** end - 1.15 ** amount) / 0.15);\nexports.getCostOfNBuildings = getCostOfNBuildings;\nconst cleanHTML = (html) => html.replace(/<q>.*<\\/q>/g, '')\n    .replace(/<[^>]+>/g, '')\n    .replace(/&bull;/g, '●')\n    .replace(/&eacute;/g, 'é');\nexports.cleanHTML = cleanHTML;\nconst formatDuration = (duration, { short = true, pad = false } = {}) => {\n    duration = Math.floor(duration);\n    let hours = String(Math.floor(duration / 3600));\n    let minutes = String(Math.floor((duration % 3600) / 60));\n    let seconds = String(duration % 60);\n    if (pad) {\n        [hours, minutes, seconds] = [hours, minutes, seconds].map(num => num && ('0' + num).slice(-2));\n    }\n    const [h, m, s] = short\n        ? ['h', 'm', 's']\n        : [' hours', ' minutes', ' seconds'];\n    if (hours !== '0')\n        return `${hours}${h} ${minutes}${m} ${seconds}${s}`;\n    if (minutes !== '0')\n        return `${minutes}${m} ${seconds}${s}`;\n    return `${seconds}${s}`;\n};\nexports.formatDuration = formatDuration;\nconst formatAmount = (number, { cookies = true, format = 'full' } = {}) => {\n    number = Math.floor(number);\n    const prefix = cookies ? '🍪' : '';\n    if (number < 1e3)\n        return prefix + String(number);\n    if (number < 1e6)\n        return prefix + `${Math.floor(number / 1e3)},${number % 1000}`;\n    const power = Math.floor(Math.log10(number));\n    const floorPower = power - (power % 3);\n    let value = Math.floor(number / Math.pow(10, floorPower));\n    value += Math.round(Math.floor(number / Math.pow(10, floorPower - 2)) % 100) / 100;\n    value = Math.round(value * 100) / 100;\n    const unit = format === 'full' ? ' ' + exports.units.list[floorPower / 3 - 1] : 'e' + floorPower;\n    return prefix + String(value) + unit;\n};\nexports.formatAmount = formatAmount;\nexports.units = (() => {\n    const list = ['thousand', 'million', 'billion', 'trillion', 'quadrillion', 'quintillion', 'sextillion', 'septillion', 'octillion', 'nonillion'];\n    const prefixes = ['', 'un', 'duo', 'tre', 'quattuor', 'quin', 'sex', 'septen', 'octo', 'novem'];\n    const suffixes = ['decillion', 'vigintillion', 'trigintillion', 'quadragintillion', 'quinquagintillion', 'sexagintillion', 'septuagintillion', 'octogintillion', 'nonagintillion'];\n    for (const suf of suffixes) {\n        for (const pref of prefixes) {\n            list.push(pref + suf);\n        }\n    }\n    const map = {};\n    for (let i = 0; i < list.length; ++i) {\n        map[list[i]] = 10 ** (3 * (i + 1));\n    }\n    const regexp = new RegExp(`(\\\\d+(?:\\\\.\\\\d+)?)\\\\s+(${list.join('|')})`, 'gi');\n    const commaReg = /(\\d+),(\\d+)/g;\n    const strReplace = (str) => str.replace(commaReg, '$1$2')\n        .replace(regexp, (_, value, unit) => String(parseFloat(value) * map[unit.toLowerCase()]));\n    return { list, map, regexp, strReplace };\n})();\nconst fixMenuBug = () => {\n    exports.Game.specialTab = 'test';\n    exports.Game.ToggleSpecialMenu(false);\n};\nexports.fixMenuBug = fixMenuBug;\nconst clamp = (value, min, max) => {\n    if (value < min)\n        value = min;\n    if (max != null && value > max)\n        value = max;\n    return value;\n};\nexports.clamp = clamp;\nconst sample = (list) => list[Math.floor(Math.random() * list.length)];\nexports.sample = sample;\n\n\n//# sourceURL=webpack://@smirea/cookie-clicker-bot/./src/utils.ts?");

/***/ }),

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"__extends\": () => (/* binding */ __extends),\n/* harmony export */   \"__assign\": () => (/* binding */ __assign),\n/* harmony export */   \"__rest\": () => (/* binding */ __rest),\n/* harmony export */   \"__decorate\": () => (/* binding */ __decorate),\n/* harmony export */   \"__param\": () => (/* binding */ __param),\n/* harmony export */   \"__metadata\": () => (/* binding */ __metadata),\n/* harmony export */   \"__awaiter\": () => (/* binding */ __awaiter),\n/* harmony export */   \"__generator\": () => (/* binding */ __generator),\n/* harmony export */   \"__createBinding\": () => (/* binding */ __createBinding),\n/* harmony export */   \"__exportStar\": () => (/* binding */ __exportStar),\n/* harmony export */   \"__values\": () => (/* binding */ __values),\n/* harmony export */   \"__read\": () => (/* binding */ __read),\n/* harmony export */   \"__spread\": () => (/* binding */ __spread),\n/* harmony export */   \"__spreadArrays\": () => (/* binding */ __spreadArrays),\n/* harmony export */   \"__spreadArray\": () => (/* binding */ __spreadArray),\n/* harmony export */   \"__await\": () => (/* binding */ __await),\n/* harmony export */   \"__asyncGenerator\": () => (/* binding */ __asyncGenerator),\n/* harmony export */   \"__asyncDelegator\": () => (/* binding */ __asyncDelegator),\n/* harmony export */   \"__asyncValues\": () => (/* binding */ __asyncValues),\n/* harmony export */   \"__makeTemplateObject\": () => (/* binding */ __makeTemplateObject),\n/* harmony export */   \"__importStar\": () => (/* binding */ __importStar),\n/* harmony export */   \"__importDefault\": () => (/* binding */ __importDefault),\n/* harmony export */   \"__classPrivateFieldGet\": () => (/* binding */ __classPrivateFieldGet),\n/* harmony export */   \"__classPrivateFieldSet\": () => (/* binding */ __classPrivateFieldSet)\n/* harmony export */ });\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nvar __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nfunction __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\n\n//# sourceURL=webpack://@smirea/cookie-clicker-bot/./node_modules/tslib/tslib.es6.js?");

/***/ }),

/***/ "./package.json":
/*!**********************!*\
  !*** ./package.json ***!
  \**********************/
/***/ ((module) => {

eval("module.exports = JSON.parse('{\"name\":\"@smirea/cookie-clicker-bot\",\"private\":true,\"version\":\"3.7.0\",\"description\":\"\",\"main\":\"dist/CookieBot.js\",\"source\":\"src/index.ts\",\"scripts\":{\"watch\":\"rm -rf dist; webpack --watch\",\"build\":\"rm -rf dist; webpack\",\"build:tsc-errors\":\"tsc --noEmit\"},\"repository\":{\"type\":\"git\",\"url\":\"git+https://github.com/smirea/cookie-clicker-bot.git\"},\"keywords\":[],\"author\":\"\",\"license\":\"ISC\",\"bugs\":{\"url\":\"https://github.com/smirea/cookie-clicker-bot/issues\"},\"homepage\":\"https://github.com/smirea/cookie-clicker-bot#readme\",\"devDependencies\":{\"husky\":\"^7.0.4\",\"terser-webpack-plugin\":\"^5.3.0\",\"ts-loader\":\"^9.2.6\",\"tslib\":\"^2.3.1\",\"typescript\":\"^4.5.4\",\"webpack\":\"^5.65.0\",\"webpack-cli\":\"^4.9.1\"}}');\n\n//# sourceURL=webpack://@smirea/cookie-clicker-bot/./package.json?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ })()
;